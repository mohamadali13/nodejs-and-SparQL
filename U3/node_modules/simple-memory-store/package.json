{
  "_from": "simple-memory-store",
  "_id": "simple-memory-store@1.0.2",
  "_inBundle": false,
  "_integrity": "sha1-PInteiDGNZ2zAv0LzrpWMVSQ+jU=",
  "_location": "/simple-memory-store",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "simple-memory-store",
    "fetchSpec": "latest",
    "name": "simple-memory-store",
    "raw": "simple-memory-store",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/simple-memory-store/-/simple-memory-store-1.0.2.tgz",
  "_shasum": "3c89ed7a20c6359db302fd0bceba56315490fa35",
  "_spec": "simple-memory-store",
  "_where": "/home/tautellini/Schreibtisch/Web2Projekt/mohachiflow---web-2/U1",
  "author": {
    "name": "Johannes Konert",
    "url": "https://github.com/jkonert"
  },
  "bugs": {
    "url": "https://github.com/jkonert/simple-memory-store/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "module providing a simple in memory storage solution for trainig",
  "devDependencies": {},
  "engines": {
    "node": ">=6.4"
  },
  "files": [
    "store.js"
  ],
  "homepage": "https://github.com/jkonert/in-memory-store",
  "keywords": [
    "memory",
    "storage"
  ],
  "license": "MIT",
  "main": "store.js",
  "name": "simple-memory-store",
  "optionalDependencies": {},
  "readme": "# simple-memory-store\r\nES6 module for providing a simple interface to a kind of database (only in memory) to be used for training/lectures (not productivity).\r\nObjects stored are identified by `.id` attribute, which is automatically set and \r\nincremented (starting with `100`) over all collections (called types). \r\nOn `insert(..)` operation `.id` must not be set (and will be added by the insert method).\r\n\r\n__This simple-memory-store is not intended to be used for production use, but only for training or lecture purposes!__\r\n \r\n # Usage\r\n `const store = new (require('simple-memory-store'))();`\r\n \r\n `require(..)` will return the ES6 class `Store`, which you need to create an instance from. Constructor has no parameters. \r\n \r\n # methods exposed as public\r\n - `select (String type, Number id = undefined)` @returns undefined, copy of one element or array of copied elements, if `id` is omitted\r\n - `insert (String type, Object element)` @returns the new element as a copy with set `.id` attribute\r\n - `replace (String type, Number id, Object element)` @returns the former object stored before\r\n - `remove (String type, Number id)` @returns the former object stored before\r\n \r\n __All methods throw Errors if something went wrong.__\r\n \r\n Elements stored in store are expected to have an `.id` property with a numeric value > 0 (except on `insert(..)`)\r\n \r\n ",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jkonert/simple-memory-store.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.2"
}
